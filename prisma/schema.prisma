// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// prisma/schema.prisma

// Using PostgreSQL as the database
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SUPABASE_DATABASE_URL")
}

// Define your data model
model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  price       Decimal     @db.Decimal(10, 2)
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  Int
  images      Image[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  OrderItem   OrderItem[]
  featured    Featured?
  discount    Int?
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        Int         @id @default(autoincrement())
  userId    String
  items     OrderItem[]
  total     Decimal     @db.Decimal(10, 2)
  status    OrderStatus
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Decimal @db.Decimal(10, 2)
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum Featured {
  NEW
  DISCOUNT
}
